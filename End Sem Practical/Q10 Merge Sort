import math
def mergeSort(arr,low,high,comps):
    if(low<high):
        mid= (low+high)//2
        mergeSort(arr,low,mid,comps)
        mergeSort(arr,mid+1,high,comps)
        merge(arr,low,mid,high,comps)

def merge(arr,low,mid,high,comps):
    temp=[]
    i,j=low,mid+1
    while(i<=mid and j<=high):
        if(arr[i]<=arr[j]):
            comps[0]+=1
            temp.append(arr[i])
            i+=1
        else:
            comps[0]+=1
            temp.append(arr[j])
            j+=1
    while(i<=mid):
        temp.append(arr[i])
        i+=1
    while (j <=high):
        temp.append(arr[j])
        j+=1
    i=0
    for p in range(low,high+1):
        arr[p]= temp[i]
        i+=1
def countInversions(arr,n):
    return sum(arr[i]>arr[j] for i in range(n) for j in range(i+1,n))
t= int(input())

for _ in range(t):
    n= int(input())
    arr= list(map(int,input().split()))
    comps=[0]
    inv = countInversions(arr, n)
    mergeSort(arr,0,n-1,comps)

    print(arr)
    print("Comparisons= ",comps[0])
    print("Inversions= ",inv)

